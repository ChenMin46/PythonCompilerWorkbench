# from Lib/doctest.py
self.val = self.val ** 2

# from Lib/fractions.py
def foo():
    return Fraction(a._denominator ** -power,
                    a._numerator ** -power)
===
Module
  body: [
    Assign >> 'self.val = self.val ** 2'
      targets: [
        Attribute >> 'self.val'
          value: Name >> 'self'
            id: 'self'
            ctx: Load
          attr: 'val'
          ctx: Store
      ]
      value: BinOp >> 'self.val ** 2'
        left: Attribute >> 'self.val'
          value: Name >> 'self'
            id: 'self'
            ctx: Load
          attr: 'val'
          ctx: Load
        op: Pow
        right: Num >> '2'
          n: 2
    FunctionDef >> 'def foo()'
      name: 'foo'
      args: arguments
        args: [
        ]
        vararg: None
        kwarg: None
        defaults: [
        ]
      body: [
        Return ML>> 'return Fraction(a._denominator ** -power,\n                    a._numerator ** -power)'
          value: Call ML>> 'Fraction(a._denominator ** -power,\n                    a._numerator ** -power)'
            func: Name >> 'Fraction'
              id: 'Fraction'
              ctx: Load
            args: [
              BinOp >> 'a._denominator ** -power'
                left: Attribute >> 'a._denominator'
                  value: Name >> 'a'
                    id: 'a'
                    ctx: Load
                  attr: '_denominator'
                  ctx: Load
                op: Pow
                right: UnaryOp >> '-power'
                  op: USub
                  operand: Name >> 'power'
                    id: 'power'
                    ctx: Load
              BinOp >> 'a._numerator ** -power'
                left: Attribute >> 'a._numerator'
                  value: Name >> 'a'
                    id: 'a'
                    ctx: Load
                  attr: '_numerator'
                  ctx: Load
                op: Pow
                right: UnaryOp >> '-power'
                  op: USub
                  operand: Name >> 'power'
                    id: 'power'
                    ctx: Load
            ]
            keywords: [
            ]
            starargs: None
            kwargs: None
      ]
      decorator_list: [
      ]
  ]
--- JSON ---
{
  "contents": [
    {
      "id": "tid_1", 
      "name": "comment", 
      "value": "# from Lib/doctest.py"
    }, 
    "\n", 
    {
      "contents": [
        {
          "contents": [
            {
              "attr": "val", 
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "self"
                }, 
                ".val"
              ], 
              "ctx": "Store", 
              "id": "id_0", 
              "name": "Attribute"
            }, 
            " ", 
            {
              "id": "tid_2", 
              "name": "token", 
              "value": "="
            }, 
            " ", 
            {
              "contents": [
                {
                  "attr": "val", 
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "self"
                    }, 
                    ".val"
                  ], 
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Attribute"
                }, 
                " ", 
                {
                  "id": "tid_3", 
                  "name": "token", 
                  "value": "**"
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "name": "Num", 
                  "value": "2"
                }
              ], 
              "id": "id_0", 
              "name": "BinOp", 
              "op": "Pow"
            }
          ], 
          "id": "id_0", 
          "name": "Assign"
        }, 
        "\n\n", 
        {
          "id": "tid_4", 
          "name": "comment", 
          "value": "# from Lib/fractions.py"
        }, 
        "\n", 
        {
          "id": "id_0", 
          "name": "FunctionDef", 
          "value": "def foo()"
        }, 
        {
          "id": "tid_5", 
          "name": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_6", 
              "name": "token", 
              "value": "return"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "Fraction"
                }, 
                "(", 
                {
                  "contents": [
                    {
                      "attr": "_denominator", 
                      "contents": [
                        {
                          "ctx": "Load", 
                          "id": "id_0", 
                          "name": "Name", 
                          "value": "a"
                        }, 
                        "._denominator"
                      ], 
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Attribute"
                    }, 
                    " ", 
                    {
                      "id": "tid_7", 
                      "name": "token", 
                      "value": "**"
                    }, 
                    " ", 
                    {
                      "contents": [
                        {
                          "id": "tid_8", 
                          "name": "token", 
                          "value": "-"
                        }, 
                        {
                          "ctx": "Load", 
                          "id": "id_0", 
                          "name": "Name", 
                          "value": "power"
                        }
                      ], 
                      "id": "id_0", 
                      "name": "UnaryOp", 
                      "op": "USub"
                    }
                  ], 
                  "id": "id_0", 
                  "name": "BinOp", 
                  "op": "Pow"
                }, 
                {
                  "id": "tid_9", 
                  "name": "token", 
                  "value": ","
                }, 
                "\n                    ", 
                {
                  "contents": [
                    {
                      "attr": "_numerator", 
                      "contents": [
                        {
                          "ctx": "Load", 
                          "id": "id_0", 
                          "name": "Name", 
                          "value": "a"
                        }, 
                        "._numerator"
                      ], 
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Attribute"
                    }, 
                    " ", 
                    {
                      "id": "tid_10", 
                      "name": "token", 
                      "value": "**"
                    }, 
                    " ", 
                    {
                      "contents": [
                        {
                          "id": "tid_11", 
                          "name": "token", 
                          "value": "-"
                        }, 
                        {
                          "ctx": "Load", 
                          "id": "id_0", 
                          "name": "Name", 
                          "value": "power"
                        }
                      ], 
                      "id": "id_0", 
                      "name": "UnaryOp", 
                      "op": "USub"
                    }
                  ], 
                  "id": "id_0", 
                  "name": "BinOp", 
                  "op": "Pow"
                }, 
                ")"
              ], 
              "id": "id_0", 
              "name": "Call"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }
      ], 
      "id": "id_0", 
      "name": "Module"
    }, 
    "\n"
  ], 
  "id": "id_ROOT", 
  "name": "ROOT_NODE"
}
