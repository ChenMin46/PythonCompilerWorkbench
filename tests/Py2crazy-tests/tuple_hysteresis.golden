def foo():
  return (1,2,3)

# the RETURN_VALUE instruction after BUILD_TUPLE should get the benefits
# of hysteresis (i.e., the same start_col and extent as BUILD_TUPLE).
# Right now we have hysteresis only for function calls, and that
# hysteresis might play badly with hysteresis for other types, so think
# carefully about how to gracefully handle these interactions!
===
Module
  body: [
    FunctionDef >> 'def foo()'
      name: 'foo'
      args: arguments
        args: [
        ]
        vararg: None
        kwarg: None
        defaults: [
        ]
      body: [
        Return >> 'return (1,2,3)'
          value: Tuple >> '(1,2,3)'
            elts: [
              Num >> '1'
                n: 1
              Num >> '2'
                n: 2
              Num >> '3'
                n: 3
            ]
            ctx: Load
      ]
      decorator_list: [
      ]
  ]
--- JSON ---
{
  "contents": [
    {
      "contents": [
        {
          "id": "id_0", 
          "name": "FunctionDef", 
          "value": "def foo()"
        }, 
        {
          "id": "tid_1", 
          "name": "token", 
          "value": ":"
        }, 
        "\n  ", 
        {
          "contents": [
            {
              "id": "tid_2", 
              "name": "token", 
              "value": "return"
            }, 
            " ", 
            {
              "contents": [
                {
                  "id": "tid_3", 
                  "name": "token", 
                  "value": "("
                }, 
                {
                  "id": "id_0", 
                  "name": "Num", 
                  "value": "1"
                }, 
                {
                  "id": "tid_4", 
                  "name": "token", 
                  "value": ","
                }, 
                {
                  "id": "id_0", 
                  "name": "Num", 
                  "value": "2"
                }, 
                {
                  "id": "tid_5", 
                  "name": "token", 
                  "value": ","
                }, 
                {
                  "id": "id_0", 
                  "name": "Num", 
                  "value": "3"
                }, 
                {
                  "id": "tid_6", 
                  "name": "token", 
                  "value": ")"
                }
              ], 
              "id": "id_0", 
              "name": "Tuple"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }
      ], 
      "id": "id_0", 
      "name": "Module"
    }, 
    "\n\n", 
    {
      "id": "tid_7", 
      "name": "comment", 
      "value": "# the RETURN_VALUE instruction after BUILD_TUPLE should get the benefits"
    }, 
    "\n", 
    {
      "id": "tid_8", 
      "name": "comment", 
      "value": "# of hysteresis (i.e., the same start_col and extent as BUILD_TUPLE)."
    }, 
    "\n", 
    {
      "id": "tid_9", 
      "name": "comment", 
      "value": "# Right now we have hysteresis only for function calls, and that"
    }, 
    "\n", 
    {
      "id": "tid_10", 
      "name": "comment", 
      "value": "# hysteresis might play badly with hysteresis for other types, so think"
    }, 
    "\n", 
    {
      "id": "tid_11", 
      "name": "comment", 
      "value": "# carefully about how to gracefully handle these interactions!"
    }, 
    "\n"
  ], 
  "id": "id_ROOT", 
  "name": "ROOT_NODE"
}
