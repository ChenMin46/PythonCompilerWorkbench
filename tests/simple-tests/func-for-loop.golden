def foo(a, b, c=3):
    d = a + b * c - bar()

    for i in range(10):
        print i, d

    return c, d
===
Module
  body: [
    FunctionDef >> 'def foo(a, b, c=3)'
      name: 'foo'
      args: arguments
        args: [
          Name >> 'a'
            id: 'a'
            ctx: Param
          Name >> 'b'
            id: 'b'
            ctx: Param
          Name >> 'c'
            id: 'c'
            ctx: Param
        ]
        vararg: None
        kwarg: None
        defaults: [
          Num >> '3'
            n: 3
        ]
      body: [
        Assign >> 'd = a + b * c - bar()'
          targets: [
            Name >> 'd'
              id: 'd'
              ctx: Store
          ]
          value: BinOp >> 'a + b * c - bar()'
            left: BinOp >> 'a + b * c'
              left: Name >> 'a'
                id: 'a'
                ctx: Load
              op: Add
              right: BinOp >> 'b * c'
                left: Name >> 'b'
                  id: 'b'
                  ctx: Load
                op: Mult
                right: Name >> 'c'
                  id: 'c'
                  ctx: Load
            op: Sub
            right: Call >> 'bar()'
              func: Name >> 'bar'
                id: 'bar'
                ctx: Load
              args: [
              ]
              keywords: [
              ]
              starargs: None
              kwargs: None
        For >> 'for i in range(10)'
          target: Name >> 'i'
            id: 'i'
            ctx: Store
          iter: Call >> 'range(10)'
            func: Name >> 'range'
              id: 'range'
              ctx: Load
            args: [
              Num >> '10'
                n: 10
            ]
            keywords: [
            ]
            starargs: None
            kwargs: None
          body: [
            Print >> 'print i, d'
              dest: None
              values: [
                Name >> 'i'
                  id: 'i'
                  ctx: Load
                Name >> 'd'
                  id: 'd'
                  ctx: Load
              ]
              nl: True
          ]
          orelse: [
          ]
        Return >> 'return c, d'
          value: Tuple >> 'c, d'
            elts: [
              Name >> 'c'
                id: 'c'
                ctx: Load
              Name >> 'd'
                id: 'd'
                ctx: Load
            ]
            ctx: Load
      ]
      decorator_list: [
      ]
  ]
--- JSON ---
{
  "contents": [
    {
      "contents": [
        {
          "contents": [
            "def foo(", 
            {
              "contents": [
                {
                  "contents": [
                    "a"
                  ], 
                  "id": "id_0", 
                  "name": "Name"
                }, 
                {
                  "id": "tid_1", 
                  "name": "token", 
                  "value": ","
                }, 
                " ", 
                {
                  "contents": [
                    "b"
                  ], 
                  "id": "id_0", 
                  "name": "Name"
                }, 
                {
                  "id": "tid_2", 
                  "name": "token", 
                  "value": ","
                }, 
                " ", 
                {
                  "contents": [
                    "c"
                  ], 
                  "id": "id_0", 
                  "name": "Name"
                }, 
                {
                  "id": "tid_3", 
                  "name": "token", 
                  "value": "="
                }, 
                {
                  "contents": [
                    "3"
                  ], 
                  "id": "id_0", 
                  "name": "Num"
                }
              ], 
              "id": "id_0", 
              "name": "arguments"
            }, 
            {
              "id": "tid_4", 
              "name": "token", 
              "value": ")"
            }
          ], 
          "id": "id_0", 
          "name": "FunctionDef"
        }, 
        {
          "id": "tid_5", 
          "name": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "contents": [
                "d"
              ], 
              "id": "id_0", 
              "name": "Name"
            }, 
            " ", 
            {
              "id": "tid_6", 
              "name": "token", 
              "value": "="
            }, 
            " ", 
            {
              "contents": [
                {
                  "contents": [
                    {
                      "contents": [
                        "a"
                      ], 
                      "id": "id_0", 
                      "name": "Name"
                    }, 
                    " ", 
                    {
                      "id": "tid_7", 
                      "name": "token", 
                      "value": "+"
                    }, 
                    " ", 
                    {
                      "contents": [
                        {
                          "contents": [
                            "b"
                          ], 
                          "id": "id_0", 
                          "name": "Name"
                        }, 
                        " ", 
                        {
                          "id": "tid_8", 
                          "name": "token", 
                          "value": "*"
                        }, 
                        " ", 
                        {
                          "contents": [
                            "c"
                          ], 
                          "id": "id_0", 
                          "name": "Name"
                        }
                      ], 
                      "id": "id_0", 
                      "name": "BinOp"
                    }
                  ], 
                  "id": "id_0", 
                  "name": "BinOp"
                }, 
                " ", 
                {
                  "id": "tid_9", 
                  "name": "token", 
                  "value": "-"
                }, 
                " ", 
                {
                  "contents": [
                    {
                      "contents": [
                        "bar"
                      ], 
                      "id": "id_0", 
                      "name": "Name"
                    }, 
                    "()"
                  ], 
                  "id": "id_0", 
                  "name": "Call"
                }
              ], 
              "id": "id_0", 
              "name": "BinOp"
            }
          ], 
          "id": "id_0", 
          "name": "Assign"
        }, 
        "\n\n    ", 
        {
          "contents": [
            {
              "id": "tid_10", 
              "name": "token", 
              "value": "for"
            }, 
            " ", 
            {
              "contents": [
                "i"
              ], 
              "id": "id_0", 
              "name": "Name"
            }, 
            " ", 
            {
              "id": "tid_11", 
              "name": "token", 
              "value": "in"
            }, 
            " ", 
            {
              "contents": [
                {
                  "contents": [
                    "range"
                  ], 
                  "id": "id_0", 
                  "name": "Name"
                }, 
                {
                  "id": "tid_12", 
                  "name": "token", 
                  "value": "("
                }, 
                {
                  "contents": [
                    "10"
                  ], 
                  "id": "id_0", 
                  "name": "Num"
                }, 
                {
                  "id": "tid_13", 
                  "name": "token", 
                  "value": ")"
                }
              ], 
              "id": "id_0", 
              "name": "Call"
            }
          ], 
          "id": "id_0", 
          "name": "For"
        }, 
        {
          "id": "tid_14", 
          "name": "token", 
          "value": ":"
        }, 
        "\n        ", 
        {
          "contents": [
            {
              "id": "tid_15", 
              "name": "token", 
              "value": "print"
            }, 
            " ", 
            {
              "contents": [
                "i"
              ], 
              "id": "id_0", 
              "name": "Name"
            }, 
            {
              "id": "tid_16", 
              "name": "token", 
              "value": ","
            }, 
            " ", 
            {
              "contents": [
                "d"
              ], 
              "id": "id_0", 
              "name": "Name"
            }
          ], 
          "id": "id_0", 
          "name": "Print"
        }, 
        "\n\n    ", 
        {
          "contents": [
            {
              "id": "tid_17", 
              "name": "token", 
              "value": "return"
            }, 
            " ", 
            {
              "contents": [
                {
                  "contents": [
                    "c"
                  ], 
                  "id": "id_0", 
                  "name": "Name"
                }, 
                {
                  "id": "tid_18", 
                  "name": "token", 
                  "value": ","
                }, 
                " ", 
                {
                  "contents": [
                    "d"
                  ], 
                  "id": "id_0", 
                  "name": "Name"
                }
              ], 
              "id": "id_0", 
              "name": "Tuple"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }
      ], 
      "id": "id_0", 
      "name": "Module"
    }, 
    "\n"
  ], 
  "id": "id_ROOT", 
  "name": "ROOT_NODE"
}
