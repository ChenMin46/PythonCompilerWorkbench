while (x > 0):
    print x
    x -= 1

while (x > 0):
    if x % 2 == 0:
        print x
    x -= 1

while (x > 0):
    if x % 2 == 0:
        print x
    x -= 1

while (x > 0):
    if x % 2 == 0:
        continue
    print x
    x -= 1

while True:
    if x < 0:
        break
    x -= 1

while True:
    pass
===
Module
  body: [
    While >> 'while (x > 0'
      test: Compare >> 'x > 0'
        left: Name >> 'x'
          id: 'x'
          ctx: Load
        ops: [
          Gt
        ]
        comparators: [
          Num >> '0'
            n: 0
        ]
      body: [
        Print >> 'print x'
          dest: None
          values: [
            Name >> 'x'
              id: 'x'
              ctx: Load
          ]
          nl: True
        AugAssign >> 'x -= 1'
          target: Name >> 'x'
            id: 'x'
            ctx: Store
          op: Sub
          value: Num >> '1'
            n: 1
      ]
      orelse: [
      ]
    While >> 'while (x > 0'
      test: Compare >> 'x > 0'
        left: Name >> 'x'
          id: 'x'
          ctx: Load
        ops: [
          Gt
        ]
        comparators: [
          Num >> '0'
            n: 0
        ]
      body: [
        If >> 'if x % 2 == 0'
          test: Compare >> 'x % 2 == 0'
            left: BinOp >> 'x % 2'
              left: Name >> 'x'
                id: 'x'
                ctx: Load
              op: Mod
              right: Num >> '2'
                n: 2
            ops: [
              Eq
            ]
            comparators: [
              Num >> '0'
                n: 0
            ]
          body: [
            Print >> 'print x'
              dest: None
              values: [
                Name >> 'x'
                  id: 'x'
                  ctx: Load
              ]
              nl: True
          ]
          orelse: [
          ]
        AugAssign >> 'x -= 1'
          target: Name >> 'x'
            id: 'x'
            ctx: Store
          op: Sub
          value: Num >> '1'
            n: 1
      ]
      orelse: [
      ]
    While >> 'while (x > 0'
      test: Compare >> 'x > 0'
        left: Name >> 'x'
          id: 'x'
          ctx: Load
        ops: [
          Gt
        ]
        comparators: [
          Num >> '0'
            n: 0
        ]
      body: [
        If >> 'if x % 2 == 0'
          test: Compare >> 'x % 2 == 0'
            left: BinOp >> 'x % 2'
              left: Name >> 'x'
                id: 'x'
                ctx: Load
              op: Mod
              right: Num >> '2'
                n: 2
            ops: [
              Eq
            ]
            comparators: [
              Num >> '0'
                n: 0
            ]
          body: [
            Print >> 'print x'
              dest: None
              values: [
                Name >> 'x'
                  id: 'x'
                  ctx: Load
              ]
              nl: True
          ]
          orelse: [
          ]
        AugAssign >> 'x -= 1'
          target: Name >> 'x'
            id: 'x'
            ctx: Store
          op: Sub
          value: Num >> '1'
            n: 1
      ]
      orelse: [
      ]
    While >> 'while (x > 0'
      test: Compare >> 'x > 0'
        left: Name >> 'x'
          id: 'x'
          ctx: Load
        ops: [
          Gt
        ]
        comparators: [
          Num >> '0'
            n: 0
        ]
      body: [
        If >> 'if x % 2 == 0'
          test: Compare >> 'x % 2 == 0'
            left: BinOp >> 'x % 2'
              left: Name >> 'x'
                id: 'x'
                ctx: Load
              op: Mod
              right: Num >> '2'
                n: 2
            ops: [
              Eq
            ]
            comparators: [
              Num >> '0'
                n: 0
            ]
          body: [
            Continue >> 'continue'
          ]
          orelse: [
          ]
        Print >> 'print x'
          dest: None
          values: [
            Name >> 'x'
              id: 'x'
              ctx: Load
          ]
          nl: True
        AugAssign >> 'x -= 1'
          target: Name >> 'x'
            id: 'x'
            ctx: Store
          op: Sub
          value: Num >> '1'
            n: 1
      ]
      orelse: [
      ]
    While >> 'while True'
      test: Name >> 'True'
        id: 'True'
        ctx: Load
      body: [
        If >> 'if x < 0'
          test: Compare >> 'x < 0'
            left: Name >> 'x'
              id: 'x'
              ctx: Load
            ops: [
              Lt
            ]
            comparators: [
              Num >> '0'
                n: 0
            ]
          body: [
            Break >> 'break'
          ]
          orelse: [
          ]
        AugAssign >> 'x -= 1'
          target: Name >> 'x'
            id: 'x'
            ctx: Store
          op: Sub
          value: Num >> '1'
            n: 1
      ]
      orelse: [
      ]
    While >> 'while True'
      test: Name >> 'True'
        id: 'True'
        ctx: Load
      body: [
        Pass >> 'pass'
      ]
      orelse: [
      ]
  ]
--- JSON ---
{
  "contents": [
    {
      "contents": [
        {
          "contents": [
            "while (", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "x"
                }, 
                " ", 
                {
                  "id": "tid_1", 
                  "type": "token", 
                  "value": ">"
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "type": "Num", 
                  "value": "0"
                }
              ], 
              "id": "id_0", 
              "ops": [
                "Gt"
              ], 
              "type": "Compare"
            }
          ], 
          "id": "id_0", 
          "type": "While"
        }, 
        "):\n    ", 
        {
          "contents": [
            {
              "id": "tid_2", 
              "type": "token", 
              "value": "print"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "x"
            }
          ], 
          "id": "id_0", 
          "type": "Print"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Name", 
              "value": "x"
            }, 
            " ", 
            {
              "id": "tid_3", 
              "type": "token", 
              "value": "-="
            }, 
            " ", 
            {
              "id": "id_0", 
              "type": "Num", 
              "value": "1"
            }
          ], 
          "id": "id_0", 
          "op": "Sub", 
          "type": "AugAssign"
        }, 
        "\n\n", 
        {
          "contents": [
            "while (", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "x"
                }, 
                " ", 
                {
                  "id": "tid_4", 
                  "type": "token", 
                  "value": ">"
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "type": "Num", 
                  "value": "0"
                }
              ], 
              "id": "id_0", 
              "ops": [
                "Gt"
              ], 
              "type": "Compare"
            }
          ], 
          "id": "id_0", 
          "type": "While"
        }, 
        "):\n    ", 
        {
          "contents": [
            {
              "id": "tid_5", 
              "type": "token", 
              "value": "if"
            }, 
            " ", 
            {
              "contents": [
                {
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "type": "Name", 
                      "value": "x"
                    }, 
                    " ", 
                    {
                      "id": "tid_6", 
                      "type": "token", 
                      "value": "%"
                    }, 
                    " ", 
                    {
                      "id": "id_0", 
                      "type": "Num", 
                      "value": "2"
                    }
                  ], 
                  "id": "id_0", 
                  "op": "Mod", 
                  "type": "BinOp"
                }, 
                " ", 
                {
                  "id": "tid_7", 
                  "type": "token", 
                  "value": "=="
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "type": "Num", 
                  "value": "0"
                }
              ], 
              "id": "id_0", 
              "ops": [
                "Eq"
              ], 
              "type": "Compare"
            }
          ], 
          "id": "id_0", 
          "type": "If"
        }, 
        {
          "id": "tid_8", 
          "type": "token", 
          "value": ":"
        }, 
        "\n        ", 
        {
          "contents": [
            {
              "id": "tid_9", 
              "type": "token", 
              "value": "print"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "x"
            }
          ], 
          "id": "id_0", 
          "type": "Print"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Name", 
              "value": "x"
            }, 
            " ", 
            {
              "id": "tid_10", 
              "type": "token", 
              "value": "-="
            }, 
            " ", 
            {
              "id": "id_0", 
              "type": "Num", 
              "value": "1"
            }
          ], 
          "id": "id_0", 
          "op": "Sub", 
          "type": "AugAssign"
        }, 
        "\n\n", 
        {
          "contents": [
            "while (", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "x"
                }, 
                " ", 
                {
                  "id": "tid_11", 
                  "type": "token", 
                  "value": ">"
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "type": "Num", 
                  "value": "0"
                }
              ], 
              "id": "id_0", 
              "ops": [
                "Gt"
              ], 
              "type": "Compare"
            }
          ], 
          "id": "id_0", 
          "type": "While"
        }, 
        "):\n    ", 
        {
          "contents": [
            {
              "id": "tid_12", 
              "type": "token", 
              "value": "if"
            }, 
            " ", 
            {
              "contents": [
                {
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "type": "Name", 
                      "value": "x"
                    }, 
                    " ", 
                    {
                      "id": "tid_13", 
                      "type": "token", 
                      "value": "%"
                    }, 
                    " ", 
                    {
                      "id": "id_0", 
                      "type": "Num", 
                      "value": "2"
                    }
                  ], 
                  "id": "id_0", 
                  "op": "Mod", 
                  "type": "BinOp"
                }, 
                " ", 
                {
                  "id": "tid_14", 
                  "type": "token", 
                  "value": "=="
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "type": "Num", 
                  "value": "0"
                }
              ], 
              "id": "id_0", 
              "ops": [
                "Eq"
              ], 
              "type": "Compare"
            }
          ], 
          "id": "id_0", 
          "type": "If"
        }, 
        {
          "id": "tid_15", 
          "type": "token", 
          "value": ":"
        }, 
        "\n        ", 
        {
          "contents": [
            {
              "id": "tid_16", 
              "type": "token", 
              "value": "print"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "x"
            }
          ], 
          "id": "id_0", 
          "type": "Print"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Name", 
              "value": "x"
            }, 
            " ", 
            {
              "id": "tid_17", 
              "type": "token", 
              "value": "-="
            }, 
            " ", 
            {
              "id": "id_0", 
              "type": "Num", 
              "value": "1"
            }
          ], 
          "id": "id_0", 
          "op": "Sub", 
          "type": "AugAssign"
        }, 
        "\n\n", 
        {
          "contents": [
            "while (", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "x"
                }, 
                " ", 
                {
                  "id": "tid_18", 
                  "type": "token", 
                  "value": ">"
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "type": "Num", 
                  "value": "0"
                }
              ], 
              "id": "id_0", 
              "ops": [
                "Gt"
              ], 
              "type": "Compare"
            }
          ], 
          "id": "id_0", 
          "type": "While"
        }, 
        "):\n    ", 
        {
          "contents": [
            {
              "id": "tid_19", 
              "type": "token", 
              "value": "if"
            }, 
            " ", 
            {
              "contents": [
                {
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "type": "Name", 
                      "value": "x"
                    }, 
                    " ", 
                    {
                      "id": "tid_20", 
                      "type": "token", 
                      "value": "%"
                    }, 
                    " ", 
                    {
                      "id": "id_0", 
                      "type": "Num", 
                      "value": "2"
                    }
                  ], 
                  "id": "id_0", 
                  "op": "Mod", 
                  "type": "BinOp"
                }, 
                " ", 
                {
                  "id": "tid_21", 
                  "type": "token", 
                  "value": "=="
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "type": "Num", 
                  "value": "0"
                }
              ], 
              "id": "id_0", 
              "ops": [
                "Eq"
              ], 
              "type": "Compare"
            }
          ], 
          "id": "id_0", 
          "type": "If"
        }, 
        {
          "id": "tid_22", 
          "type": "token", 
          "value": ":"
        }, 
        "\n        ", 
        {
          "contents": [
            {
              "id": "tid_23", 
              "type": "token", 
              "value": "continue"
            }
          ], 
          "id": "id_0", 
          "type": "Continue"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_24", 
              "type": "token", 
              "value": "print"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "x"
            }
          ], 
          "id": "id_0", 
          "type": "Print"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Name", 
              "value": "x"
            }, 
            " ", 
            {
              "id": "tid_25", 
              "type": "token", 
              "value": "-="
            }, 
            " ", 
            {
              "id": "id_0", 
              "type": "Num", 
              "value": "1"
            }
          ], 
          "id": "id_0", 
          "op": "Sub", 
          "type": "AugAssign"
        }, 
        "\n\n", 
        {
          "contents": [
            {
              "id": "tid_26", 
              "type": "token", 
              "value": "while"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "True"
            }
          ], 
          "id": "id_0", 
          "type": "While"
        }, 
        {
          "id": "tid_27", 
          "type": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_28", 
              "type": "token", 
              "value": "if"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "x"
                }, 
                " ", 
                {
                  "id": "tid_29", 
                  "type": "token", 
                  "value": "<"
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "type": "Num", 
                  "value": "0"
                }
              ], 
              "id": "id_0", 
              "ops": [
                "Lt"
              ], 
              "type": "Compare"
            }
          ], 
          "id": "id_0", 
          "type": "If"
        }, 
        {
          "id": "tid_30", 
          "type": "token", 
          "value": ":"
        }, 
        "\n        ", 
        {
          "contents": [
            {
              "id": "tid_31", 
              "type": "token", 
              "value": "break"
            }
          ], 
          "id": "id_0", 
          "type": "Break"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Name", 
              "value": "x"
            }, 
            " ", 
            {
              "id": "tid_32", 
              "type": "token", 
              "value": "-="
            }, 
            " ", 
            {
              "id": "id_0", 
              "type": "Num", 
              "value": "1"
            }
          ], 
          "id": "id_0", 
          "op": "Sub", 
          "type": "AugAssign"
        }, 
        "\n\n", 
        {
          "contents": [
            {
              "id": "tid_33", 
              "type": "token", 
              "value": "while"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "True"
            }
          ], 
          "id": "id_0", 
          "type": "While"
        }, 
        {
          "id": "tid_34", 
          "type": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_35", 
              "type": "token", 
              "value": "pass"
            }
          ], 
          "id": "id_0", 
          "type": "Pass"
        }
      ], 
      "id": "id_0", 
      "type": "Module"
    }, 
    "\n"
  ], 
  "id": "id_ROOT", 
  "type": "ROOT_NODE"
}
