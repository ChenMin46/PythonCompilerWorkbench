"""John's cat liked "The Matrix"
but his dog
preferred the sequels."""

foo = '''multi
    line
  string'''

bar = '''
multi
line
string
with empty
first line
'''

baz = """     
multi
line
string
with spaces in first line
"""

# This doesn't work, but it's nuts!!!
#"""multi
#    line
#      string
#        method
#          call""".join('''
#another
#  multi
#    line
#      string''')
===
Module
  body: [
    Expr
      value: Str ML>> '"""John\'s cat liked "The Matrix"\nbut his dog\npreferred the sequels."""'
        s: 'John\'s cat liked "The Matrix"\nbut his dog\npreferred the sequels.'
    Assign ML>> "foo = '''multi\n    line\n  string'''"
      targets: [
        Name >> 'foo'
          id: 'foo'
          ctx: Store
      ]
      value: Str ML>> "'''multi\n    line\n  string'''"
        s: 'multi\n    line\n  string'
    Assign ML>> "bar = '''\nmulti\nline\nstring\nwith empty\nfirst line\n'''"
      targets: [
        Name >> 'bar'
          id: 'bar'
          ctx: Store
      ]
      value: Str ML>> "'''\nmulti\nline\nstring\nwith empty\nfirst line\n'''"
        s: '\nmulti\nline\nstring\nwith empty\nfirst line\n'
    Assign ML>> 'baz = """     \nmulti\nline\nstring\nwith spaces in first line\n"""'
      targets: [
        Name >> 'baz'
          id: 'baz'
          ctx: Store
      ]
      value: Str ML>> '"""     \nmulti\nline\nstring\nwith spaces in first line\n"""'
        s: '     \nmulti\nline\nstring\nwith spaces in first line\n'
  ]
--- JSON ---
{
  "contents": [
    {
      "contents": [
        {
          "contents": [
            {
              "contents": [
                "\"\"\"John's cat liked \"The Matrix\"\nbut his dog\npreferred the sequels.\"\"\""
              ], 
              "id": "id_0", 
              "name": "Str"
            }
          ], 
          "id": "id_0", 
          "name": "Expr"
        }, 
        "\n\n", 
        {
          "contents": [
            {
              "contents": [
                "foo"
              ], 
              "id": "id_0", 
              "name": "Name"
            }, 
            " = ", 
            {
              "contents": [
                "'''multi\n    line\n  string'''"
              ], 
              "id": "id_0", 
              "name": "Str"
            }
          ], 
          "id": "id_0", 
          "name": "Assign"
        }, 
        "\n\n", 
        {
          "contents": [
            {
              "contents": [
                "bar"
              ], 
              "id": "id_0", 
              "name": "Name"
            }, 
            " = ", 
            {
              "contents": [
                "'''\nmulti\nline\nstring\nwith empty\nfirst line\n'''"
              ], 
              "id": "id_0", 
              "name": "Str"
            }
          ], 
          "id": "id_0", 
          "name": "Assign"
        }, 
        "\n\n", 
        {
          "contents": [
            {
              "contents": [
                "baz"
              ], 
              "id": "id_0", 
              "name": "Name"
            }, 
            " = ", 
            {
              "contents": [
                "\"\"\"     \nmulti\nline\nstring\nwith spaces in first line\n\"\"\""
              ], 
              "id": "id_0", 
              "name": "Str"
            }
          ], 
          "id": "id_0", 
          "name": "Assign"
        }
      ], 
      "id": "id_0", 
      "name": "Module"
    }, 
    "\n\n# This doesn't work, but it's nuts!!!\n#\"\"\"multi\n#    line\n#      string\n#        method\n#          call\"\"\".join('''\n#another\n#  multi\n#    line\n#      string''')\n"
  ], 
  "id": "id_ROOT", 
  "name": "ROOT_NODE"
}
