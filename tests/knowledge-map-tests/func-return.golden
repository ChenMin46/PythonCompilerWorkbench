def foo():
    return

def foo():
    return 42

def foo():
    return True

def foo():
    return a + b

def foo():
    return foo(n)

def fact(n):
    return n * fact(n-1)

def foo():
    return area(distance(xc, yc, xp, yp))

def foo():
    return lst[3]

def foo():
    return lst[2:6]

def foo():
    return (a, b, c)

def foo():
    return a, b, c

def foo():
    return min(t), max(t)

def foo():
    while True:
        if x < 0:
            return y
        x -= 2
===
Module
  body: [
    FunctionDef >> 'def foo()'
      name: 'foo'
      args: arguments
        args: [
        ]
        vararg: None
        kwarg: None
        defaults: [
        ]
      body: [
        Return >> 'return'
          value: None
      ]
      decorator_list: [
      ]
    FunctionDef >> 'def foo()'
      name: 'foo'
      args: arguments
        args: [
        ]
        vararg: None
        kwarg: None
        defaults: [
        ]
      body: [
        Return >> 'return 42'
          value: Num >> '42'
            n: 42
      ]
      decorator_list: [
      ]
    FunctionDef >> 'def foo()'
      name: 'foo'
      args: arguments
        args: [
        ]
        vararg: None
        kwarg: None
        defaults: [
        ]
      body: [
        Return >> 'return True'
          value: Name >> 'True'
            id: 'True'
            ctx: Load
      ]
      decorator_list: [
      ]
    FunctionDef >> 'def foo()'
      name: 'foo'
      args: arguments
        args: [
        ]
        vararg: None
        kwarg: None
        defaults: [
        ]
      body: [
        Return >> 'return a + b'
          value: BinOp >> 'a + b'
            left: Name >> 'a'
              id: 'a'
              ctx: Load
            op: Add
            right: Name >> 'b'
              id: 'b'
              ctx: Load
      ]
      decorator_list: [
      ]
    FunctionDef >> 'def foo()'
      name: 'foo'
      args: arguments
        args: [
        ]
        vararg: None
        kwarg: None
        defaults: [
        ]
      body: [
        Return >> 'return foo(n)'
          value: Call >> 'foo(n)'
            func: Name >> 'foo'
              id: 'foo'
              ctx: Load
            args: [
              Name >> 'n'
                id: 'n'
                ctx: Load
            ]
            keywords: [
            ]
            starargs: None
            kwargs: None
      ]
      decorator_list: [
      ]
    FunctionDef >> 'def fact(n)'
      name: 'fact'
      args: arguments
        args: [
          Name >> 'n'
            id: 'n'
            ctx: Param
        ]
        vararg: None
        kwarg: None
        defaults: [
        ]
      body: [
        Return >> 'return n * fact(n-1)'
          value: BinOp >> 'n * fact(n-1)'
            left: Name >> 'n'
              id: 'n'
              ctx: Load
            op: Mult
            right: Call >> 'fact(n-1)'
              func: Name >> 'fact'
                id: 'fact'
                ctx: Load
              args: [
                BinOp >> 'n-1'
                  left: Name >> 'n'
                    id: 'n'
                    ctx: Load
                  op: Sub
                  right: Num >> '1'
                    n: 1
              ]
              keywords: [
              ]
              starargs: None
              kwargs: None
      ]
      decorator_list: [
      ]
    FunctionDef >> 'def foo()'
      name: 'foo'
      args: arguments
        args: [
        ]
        vararg: None
        kwarg: None
        defaults: [
        ]
      body: [
        Return >> 'return area(distance(xc, yc, xp, yp))'
          value: Call >> 'area(distance(xc, yc, xp, yp))'
            func: Name >> 'area'
              id: 'area'
              ctx: Load
            args: [
              Call >> 'distance(xc, yc, xp, yp)'
                func: Name >> 'distance'
                  id: 'distance'
                  ctx: Load
                args: [
                  Name >> 'xc'
                    id: 'xc'
                    ctx: Load
                  Name >> 'yc'
                    id: 'yc'
                    ctx: Load
                  Name >> 'xp'
                    id: 'xp'
                    ctx: Load
                  Name >> 'yp'
                    id: 'yp'
                    ctx: Load
                ]
                keywords: [
                ]
                starargs: None
                kwargs: None
            ]
            keywords: [
            ]
            starargs: None
            kwargs: None
      ]
      decorator_list: [
      ]
    FunctionDef >> 'def foo()'
      name: 'foo'
      args: arguments
        args: [
        ]
        vararg: None
        kwarg: None
        defaults: [
        ]
      body: [
        Return >> 'return lst[3]'
          value: Subscript >> 'lst[3]'
            value: Name >> 'lst'
              id: 'lst'
              ctx: Load
            slice: Index >> '3'
              value: Num >> '3'
                n: 3
            ctx: Load
      ]
      decorator_list: [
      ]
    FunctionDef >> 'def foo()'
      name: 'foo'
      args: arguments
        args: [
        ]
        vararg: None
        kwarg: None
        defaults: [
        ]
      body: [
        Return >> 'return lst[2:6]'
          value: Subscript >> 'lst[2:6]'
            value: Name >> 'lst'
              id: 'lst'
              ctx: Load
            slice: Slice >> '2:6'
              lower: Num >> '2'
                n: 2
              upper: Num >> '6'
                n: 6
              step: None
            ctx: Load
      ]
      decorator_list: [
      ]
    FunctionDef >> 'def foo()'
      name: 'foo'
      args: arguments
        args: [
        ]
        vararg: None
        kwarg: None
        defaults: [
        ]
      body: [
        Return >> 'return (a, b, c)'
          value: Tuple >> '(a, b, c)'
            elts: [
              Name >> 'a'
                id: 'a'
                ctx: Load
              Name >> 'b'
                id: 'b'
                ctx: Load
              Name >> 'c'
                id: 'c'
                ctx: Load
            ]
            ctx: Load
      ]
      decorator_list: [
      ]
    FunctionDef >> 'def foo()'
      name: 'foo'
      args: arguments
        args: [
        ]
        vararg: None
        kwarg: None
        defaults: [
        ]
      body: [
        Return >> 'return a, b, c'
          value: Tuple >> 'a, b, c'
            elts: [
              Name >> 'a'
                id: 'a'
                ctx: Load
              Name >> 'b'
                id: 'b'
                ctx: Load
              Name >> 'c'
                id: 'c'
                ctx: Load
            ]
            ctx: Load
      ]
      decorator_list: [
      ]
    FunctionDef >> 'def foo()'
      name: 'foo'
      args: arguments
        args: [
        ]
        vararg: None
        kwarg: None
        defaults: [
        ]
      body: [
        Return >> 'return min(t), max(t)'
          value: Tuple >> 'min(t), max(t)'
            elts: [
              Call >> 'min(t)'
                func: Name >> 'min'
                  id: 'min'
                  ctx: Load
                args: [
                  Name >> 't'
                    id: 't'
                    ctx: Load
                ]
                keywords: [
                ]
                starargs: None
                kwargs: None
              Call >> 'max(t)'
                func: Name >> 'max'
                  id: 'max'
                  ctx: Load
                args: [
                  Name >> 't'
                    id: 't'
                    ctx: Load
                ]
                keywords: [
                ]
                starargs: None
                kwargs: None
            ]
            ctx: Load
      ]
      decorator_list: [
      ]
    FunctionDef >> 'def foo()'
      name: 'foo'
      args: arguments
        args: [
        ]
        vararg: None
        kwarg: None
        defaults: [
        ]
      body: [
        While >> 'while True'
          test: Name >> 'True'
            id: 'True'
            ctx: Load
          body: [
            If >> 'if x < 0'
              test: Compare >> 'x < 0'
                left: Name >> 'x'
                  id: 'x'
                  ctx: Load
                ops: [
                  Lt
                ]
                comparators: [
                  Num >> '0'
                    n: 0
                ]
              body: [
                Return >> 'return y'
                  value: Name >> 'y'
                    id: 'y'
                    ctx: Load
              ]
              orelse: [
              ]
            AugAssign >> 'x -= 2'
              target: Name >> 'x'
                id: 'x'
                ctx: Store
              op: Sub
              value: Num >> '2'
                n: 2
          ]
          orelse: [
          ]
      ]
      decorator_list: [
      ]
  ]
--- JSON ---
{
  "contents": [
    {
      "contents": [
        {
          "id": "id_0", 
          "name": "FunctionDef", 
          "value": "def foo()"
        }, 
        {
          "id": "tid_1", 
          "name": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_2", 
              "name": "token", 
              "value": "return"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }, 
        "\n\n", 
        {
          "id": "id_0", 
          "name": "FunctionDef", 
          "value": "def foo()"
        }, 
        {
          "id": "tid_3", 
          "name": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_4", 
              "name": "token", 
              "value": "return"
            }, 
            " ", 
            {
              "id": "id_0", 
              "name": "Num", 
              "value": "42"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }, 
        "\n\n", 
        {
          "id": "id_0", 
          "name": "FunctionDef", 
          "value": "def foo()"
        }, 
        {
          "id": "tid_5", 
          "name": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_6", 
              "name": "token", 
              "value": "return"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "name": "Name", 
              "value": "True"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }, 
        "\n\n", 
        {
          "id": "id_0", 
          "name": "FunctionDef", 
          "value": "def foo()"
        }, 
        {
          "id": "tid_7", 
          "name": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_8", 
              "name": "token", 
              "value": "return"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "a"
                }, 
                " ", 
                {
                  "id": "tid_9", 
                  "name": "token", 
                  "value": "+"
                }, 
                " ", 
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "b"
                }
              ], 
              "id": "id_0", 
              "name": "BinOp", 
              "op": "Add"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }, 
        "\n\n", 
        {
          "id": "id_0", 
          "name": "FunctionDef", 
          "value": "def foo()"
        }, 
        {
          "id": "tid_10", 
          "name": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_11", 
              "name": "token", 
              "value": "return"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "foo"
                }, 
                "(", 
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "n"
                }, 
                ")"
              ], 
              "id": "id_0", 
              "name": "Call"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }, 
        "\n\n", 
        {
          "contents": [
            "def fact(", 
            {
              "contents": [
                {
                  "ctx": "Param", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "n"
                }
              ], 
              "id": "id_0", 
              "name": "arguments"
            }, 
            ")"
          ], 
          "id": "id_0", 
          "name": "FunctionDef"
        }, 
        {
          "id": "tid_12", 
          "name": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_13", 
              "name": "token", 
              "value": "return"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "n"
                }, 
                " ", 
                {
                  "id": "tid_14", 
                  "name": "token", 
                  "value": "*"
                }, 
                " ", 
                {
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "fact"
                    }, 
                    "(", 
                    {
                      "contents": [
                        {
                          "ctx": "Load", 
                          "id": "id_0", 
                          "name": "Name", 
                          "value": "n"
                        }, 
                        {
                          "id": "tid_15", 
                          "name": "token", 
                          "value": "-"
                        }, 
                        {
                          "id": "id_0", 
                          "name": "Num", 
                          "value": "1"
                        }
                      ], 
                      "id": "id_0", 
                      "name": "BinOp", 
                      "op": "Sub"
                    }, 
                    ")"
                  ], 
                  "id": "id_0", 
                  "name": "Call"
                }
              ], 
              "id": "id_0", 
              "name": "BinOp", 
              "op": "Mult"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }, 
        "\n\n", 
        {
          "id": "id_0", 
          "name": "FunctionDef", 
          "value": "def foo()"
        }, 
        {
          "id": "tid_16", 
          "name": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_17", 
              "name": "token", 
              "value": "return"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "area"
                }, 
                "(", 
                {
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "distance"
                    }, 
                    "(", 
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "xc"
                    }, 
                    {
                      "id": "tid_18", 
                      "name": "token", 
                      "value": ","
                    }, 
                    " ", 
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "yc"
                    }, 
                    {
                      "id": "tid_19", 
                      "name": "token", 
                      "value": ","
                    }, 
                    " ", 
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "xp"
                    }, 
                    {
                      "id": "tid_20", 
                      "name": "token", 
                      "value": ","
                    }, 
                    " ", 
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "yp"
                    }, 
                    ")"
                  ], 
                  "id": "id_0", 
                  "name": "Call"
                }, 
                ")"
              ], 
              "id": "id_0", 
              "name": "Call"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }, 
        "\n\n", 
        {
          "id": "id_0", 
          "name": "FunctionDef", 
          "value": "def foo()"
        }, 
        {
          "id": "tid_21", 
          "name": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_22", 
              "name": "token", 
              "value": "return"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "lst"
                }, 
                "[", 
                {
                  "contents": [
                    {
                      "id": "id_0", 
                      "name": "Num", 
                      "value": "3"
                    }
                  ], 
                  "id": "id_0", 
                  "name": "Index"
                }, 
                "]"
              ], 
              "ctx": "Load", 
              "id": "id_0", 
              "name": "Subscript"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }, 
        "\n\n", 
        {
          "id": "id_0", 
          "name": "FunctionDef", 
          "value": "def foo()"
        }, 
        {
          "id": "tid_23", 
          "name": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_24", 
              "name": "token", 
              "value": "return"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "lst"
                }, 
                "[", 
                {
                  "contents": [
                    {
                      "id": "id_0", 
                      "name": "Num", 
                      "value": "2"
                    }, 
                    {
                      "id": "tid_25", 
                      "name": "token", 
                      "value": ":"
                    }, 
                    {
                      "id": "id_0", 
                      "name": "Num", 
                      "value": "6"
                    }
                  ], 
                  "id": "id_0", 
                  "name": "Slice"
                }, 
                "]"
              ], 
              "ctx": "Load", 
              "id": "id_0", 
              "name": "Subscript"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }, 
        "\n\n", 
        {
          "id": "id_0", 
          "name": "FunctionDef", 
          "value": "def foo()"
        }, 
        {
          "id": "tid_26", 
          "name": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_27", 
              "name": "token", 
              "value": "return"
            }, 
            " ", 
            {
              "contents": [
                "(", 
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "a"
                }, 
                {
                  "id": "tid_28", 
                  "name": "token", 
                  "value": ","
                }, 
                " ", 
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "b"
                }, 
                {
                  "id": "tid_29", 
                  "name": "token", 
                  "value": ","
                }, 
                " ", 
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "c"
                }, 
                ")"
              ], 
              "ctx": "Load", 
              "id": "id_0", 
              "name": "Tuple"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }, 
        "\n\n", 
        {
          "id": "id_0", 
          "name": "FunctionDef", 
          "value": "def foo()"
        }, 
        {
          "id": "tid_30", 
          "name": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_31", 
              "name": "token", 
              "value": "return"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "a"
                }, 
                {
                  "id": "tid_32", 
                  "name": "token", 
                  "value": ","
                }, 
                " ", 
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "b"
                }, 
                {
                  "id": "tid_33", 
                  "name": "token", 
                  "value": ","
                }, 
                " ", 
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "c"
                }
              ], 
              "ctx": "Load", 
              "id": "id_0", 
              "name": "Tuple"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }, 
        "\n\n", 
        {
          "id": "id_0", 
          "name": "FunctionDef", 
          "value": "def foo()"
        }, 
        {
          "id": "tid_34", 
          "name": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_35", 
              "name": "token", 
              "value": "return"
            }, 
            " ", 
            {
              "contents": [
                {
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "min"
                    }, 
                    "(", 
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "t"
                    }, 
                    ")"
                  ], 
                  "id": "id_0", 
                  "name": "Call"
                }, 
                {
                  "id": "tid_36", 
                  "name": "token", 
                  "value": ","
                }, 
                " ", 
                {
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "max"
                    }, 
                    "(", 
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "t"
                    }, 
                    ")"
                  ], 
                  "id": "id_0", 
                  "name": "Call"
                }
              ], 
              "ctx": "Load", 
              "id": "id_0", 
              "name": "Tuple"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }, 
        "\n\n", 
        {
          "id": "id_0", 
          "name": "FunctionDef", 
          "value": "def foo()"
        }, 
        {
          "id": "tid_37", 
          "name": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_38", 
              "name": "token", 
              "value": "while"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "name": "Name", 
              "value": "True"
            }
          ], 
          "id": "id_0", 
          "name": "While"
        }, 
        {
          "id": "tid_39", 
          "name": "token", 
          "value": ":"
        }, 
        "\n        ", 
        {
          "contents": [
            {
              "id": "tid_40", 
              "name": "token", 
              "value": "if"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "x"
                }, 
                " ", 
                {
                  "id": "tid_41", 
                  "name": "token", 
                  "value": "<"
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "name": "Num", 
                  "value": "0"
                }
              ], 
              "id": "id_0", 
              "name": "Compare", 
              "ops": [
                "Lt"
              ]
            }
          ], 
          "id": "id_0", 
          "name": "If"
        }, 
        {
          "id": "tid_42", 
          "name": "token", 
          "value": ":"
        }, 
        "\n            ", 
        {
          "contents": [
            {
              "id": "tid_43", 
              "name": "token", 
              "value": "return"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "name": "Name", 
              "value": "y"
            }
          ], 
          "id": "id_0", 
          "name": "Return"
        }, 
        "\n        ", 
        {
          "contents": [
            {
              "ctx": "Store", 
              "id": "id_0", 
              "name": "Name", 
              "value": "x"
            }, 
            " ", 
            {
              "id": "tid_44", 
              "name": "token", 
              "value": "-="
            }, 
            " ", 
            {
              "id": "id_0", 
              "name": "Num", 
              "value": "2"
            }
          ], 
          "id": "id_0", 
          "name": "AugAssign", 
          "op": "Sub"
        }
      ], 
      "id": "id_0", 
      "name": "Module"
    }, 
    "\n"
  ], 
  "id": "id_ROOT", 
  "name": "ROOT_NODE"
}
