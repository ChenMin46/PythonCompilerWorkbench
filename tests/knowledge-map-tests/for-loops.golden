for elt in my_list:
    print elt

for elt in [1, 2, 3]:
    print elt

for elt in range(5):
    print elt

for elt in range(len(lst)):
    print elt

for (i, elt) in enumerate(lst):
    print i, elt

# multiline test
for (i, elt) \
       in \
           enumerate(lst):
    print i, elt

for x in range(100):
    if x < 2:
        break
    elif x > 10:
        continue
    else:
        print x

for k, v in d.iteritems():
    print k, v

for ty in type(obj).mro():
    print 'foo'
===
Module
  body: [
    For >> 'for elt in my_list'
      target: Name >> 'elt'
        id: 'elt'
        ctx: Store
      iter: Name >> 'my_list'
        id: 'my_list'
        ctx: Load
      body: [
        Print >> 'print elt'
          dest: None
          values: [
            Name >> 'elt'
              id: 'elt'
              ctx: Load
          ]
          nl: True
      ]
      orelse: [
      ]
    For >> 'for elt in [1, 2, 3]'
      target: Name >> 'elt'
        id: 'elt'
        ctx: Store
      iter: List >> '[1, 2, 3]'
        elts: [
          Num >> '1'
            n: 1
          Num >> '2'
            n: 2
          Num >> '3'
            n: 3
        ]
        ctx: Load
      body: [
        Print >> 'print elt'
          dest: None
          values: [
            Name >> 'elt'
              id: 'elt'
              ctx: Load
          ]
          nl: True
      ]
      orelse: [
      ]
    For >> 'for elt in range(5)'
      target: Name >> 'elt'
        id: 'elt'
        ctx: Store
      iter: Call >> 'range(5)'
        func: Name >> 'range'
          id: 'range'
          ctx: Load
        args: [
          Num >> '5'
            n: 5
        ]
        keywords: [
        ]
        starargs: None
        kwargs: None
      body: [
        Print >> 'print elt'
          dest: None
          values: [
            Name >> 'elt'
              id: 'elt'
              ctx: Load
          ]
          nl: True
      ]
      orelse: [
      ]
    For >> 'for elt in range(len(lst))'
      target: Name >> 'elt'
        id: 'elt'
        ctx: Store
      iter: Call >> 'range(len(lst))'
        func: Name >> 'range'
          id: 'range'
          ctx: Load
        args: [
          Call >> 'len(lst)'
            func: Name >> 'len'
              id: 'len'
              ctx: Load
            args: [
              Name >> 'lst'
                id: 'lst'
                ctx: Load
            ]
            keywords: [
            ]
            starargs: None
            kwargs: None
        ]
        keywords: [
        ]
        starargs: None
        kwargs: None
      body: [
        Print >> 'print elt'
          dest: None
          values: [
            Name >> 'elt'
              id: 'elt'
              ctx: Load
          ]
          nl: True
      ]
      orelse: [
      ]
    For >> 'for (i, elt) in enumerate(lst)'
      target: Tuple >> '(i, elt)'
        elts: [
          Name >> 'i'
            id: 'i'
            ctx: Store
          Name >> 'elt'
            id: 'elt'
            ctx: Store
        ]
        ctx: Store
      iter: Call >> 'enumerate(lst)'
        func: Name >> 'enumerate'
          id: 'enumerate'
          ctx: Load
        args: [
          Name >> 'lst'
            id: 'lst'
            ctx: Load
        ]
        keywords: [
        ]
        starargs: None
        kwargs: None
      body: [
        Print >> 'print i, elt'
          dest: None
          values: [
            Name >> 'i'
              id: 'i'
              ctx: Load
            Name >> 'elt'
              id: 'elt'
              ctx: Load
          ]
          nl: True
      ]
      orelse: [
      ]
    For ML>> 'for (i, elt) \\\n       in \\\n           enumerate(lst)'
      target: Tuple >> '(i, elt)'
        elts: [
          Name >> 'i'
            id: 'i'
            ctx: Store
          Name >> 'elt'
            id: 'elt'
            ctx: Store
        ]
        ctx: Store
      iter: Call >> 'enumerate(lst)'
        func: Name >> 'enumerate'
          id: 'enumerate'
          ctx: Load
        args: [
          Name >> 'lst'
            id: 'lst'
            ctx: Load
        ]
        keywords: [
        ]
        starargs: None
        kwargs: None
      body: [
        Print >> 'print i, elt'
          dest: None
          values: [
            Name >> 'i'
              id: 'i'
              ctx: Load
            Name >> 'elt'
              id: 'elt'
              ctx: Load
          ]
          nl: True
      ]
      orelse: [
      ]
    For >> 'for x in range(100)'
      target: Name >> 'x'
        id: 'x'
        ctx: Store
      iter: Call >> 'range(100)'
        func: Name >> 'range'
          id: 'range'
          ctx: Load
        args: [
          Num >> '100'
            n: 100
        ]
        keywords: [
        ]
        starargs: None
        kwargs: None
      body: [
        If >> 'if x < 2'
          test: Compare >> 'x < 2'
            left: Name >> 'x'
              id: 'x'
              ctx: Load
            ops: [
              Lt
            ]
            comparators: [
              Num >> '2'
                n: 2
            ]
          body: [
            Break >> 'break'
          ]
          orelse: [
            If >> 'elif x > 10'
              test: Compare >> 'x > 10'
                left: Name >> 'x'
                  id: 'x'
                  ctx: Load
                ops: [
                  Gt
                ]
                comparators: [
                  Num >> '10'
                    n: 10
                ]
              body: [
                Continue >> 'continue'
              ]
              orelse: [
                Print >> 'print x'
                  dest: None
                  values: [
                    Name >> 'x'
                      id: 'x'
                      ctx: Load
                  ]
                  nl: True
              ]
          ]
      ]
      orelse: [
      ]
    For >> 'for k, v in d.iteritems()'
      target: Tuple >> 'k, v'
        elts: [
          Name >> 'k'
            id: 'k'
            ctx: Store
          Name >> 'v'
            id: 'v'
            ctx: Store
        ]
        ctx: Store
      iter: Call >> 'd.iteritems()'
        func: Attribute >> 'd.iteritems'
          value: Name >> 'd'
            id: 'd'
            ctx: Load
          attr: 'iteritems'
          ctx: Load
        args: [
        ]
        keywords: [
        ]
        starargs: None
        kwargs: None
      body: [
        Print >> 'print k, v'
          dest: None
          values: [
            Name >> 'k'
              id: 'k'
              ctx: Load
            Name >> 'v'
              id: 'v'
              ctx: Load
          ]
          nl: True
      ]
      orelse: [
      ]
    For >> 'for ty in type(obj).mro()'
      target: Name >> 'ty'
        id: 'ty'
        ctx: Store
      iter: Call >> 'type(obj).mro()'
        func: Attribute >> 'type(obj).mro'
          value: Call >> 'type(obj)'
            func: Name >> 'type'
              id: 'type'
              ctx: Load
            args: [
              Name >> 'obj'
                id: 'obj'
                ctx: Load
            ]
            keywords: [
            ]
            starargs: None
            kwargs: None
          attr: 'mro'
          ctx: Load
        args: [
        ]
        keywords: [
        ]
        starargs: None
        kwargs: None
      body: [
        Print >> "print 'foo'"
          dest: None
          values: [
            Str >> "'foo'"
              s: 'foo'
          ]
          nl: True
      ]
      orelse: [
      ]
  ]
--- JSON ---
{
  "contents": [
    {
      "contents": [
        {
          "contents": [
            {
              "id": "tid_1", 
              "type": "token", 
              "value": "for"
            }, 
            " ", 
            {
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Name", 
              "value": "elt"
            }, 
            " ", 
            {
              "id": "tid_2", 
              "type": "token", 
              "value": "in"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "my_list"
            }
          ], 
          "id": "id_0", 
          "type": "For"
        }, 
        {
          "id": "tid_3", 
          "type": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_4", 
              "type": "token", 
              "value": "print"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "elt"
            }
          ], 
          "id": "id_0", 
          "type": "Print"
        }, 
        "\n\n", 
        {
          "contents": [
            {
              "id": "tid_5", 
              "type": "token", 
              "value": "for"
            }, 
            " ", 
            {
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Name", 
              "value": "elt"
            }, 
            " ", 
            {
              "id": "tid_6", 
              "type": "token", 
              "value": "in"
            }, 
            " ", 
            {
              "contents": [
                "[", 
                {
                  "id": "id_0", 
                  "type": "Num", 
                  "value": "1"
                }, 
                {
                  "id": "tid_7", 
                  "type": "token", 
                  "value": ","
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "type": "Num", 
                  "value": "2"
                }, 
                {
                  "id": "tid_8", 
                  "type": "token", 
                  "value": ","
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "type": "Num", 
                  "value": "3"
                }, 
                "]"
              ], 
              "ctx": "Load", 
              "id": "id_0", 
              "type": "List"
            }
          ], 
          "id": "id_0", 
          "type": "For"
        }, 
        {
          "id": "tid_9", 
          "type": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_10", 
              "type": "token", 
              "value": "print"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "elt"
            }
          ], 
          "id": "id_0", 
          "type": "Print"
        }, 
        "\n\n", 
        {
          "contents": [
            {
              "id": "tid_11", 
              "type": "token", 
              "value": "for"
            }, 
            " ", 
            {
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Name", 
              "value": "elt"
            }, 
            " ", 
            {
              "id": "tid_12", 
              "type": "token", 
              "value": "in"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "range"
                }, 
                "(", 
                {
                  "id": "id_0", 
                  "type": "Num", 
                  "value": "5"
                }, 
                ")"
              ], 
              "id": "id_0", 
              "type": "Call"
            }
          ], 
          "id": "id_0", 
          "type": "For"
        }, 
        {
          "id": "tid_13", 
          "type": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_14", 
              "type": "token", 
              "value": "print"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "elt"
            }
          ], 
          "id": "id_0", 
          "type": "Print"
        }, 
        "\n\n", 
        {
          "contents": [
            {
              "id": "tid_15", 
              "type": "token", 
              "value": "for"
            }, 
            " ", 
            {
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Name", 
              "value": "elt"
            }, 
            " ", 
            {
              "id": "tid_16", 
              "type": "token", 
              "value": "in"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "range"
                }, 
                "(", 
                {
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "type": "Name", 
                      "value": "len"
                    }, 
                    "(", 
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "type": "Name", 
                      "value": "lst"
                    }, 
                    ")"
                  ], 
                  "id": "id_0", 
                  "type": "Call"
                }, 
                ")"
              ], 
              "id": "id_0", 
              "type": "Call"
            }
          ], 
          "id": "id_0", 
          "type": "For"
        }, 
        {
          "id": "tid_17", 
          "type": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_18", 
              "type": "token", 
              "value": "print"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "elt"
            }
          ], 
          "id": "id_0", 
          "type": "Print"
        }, 
        "\n\n", 
        {
          "contents": [
            {
              "id": "tid_19", 
              "type": "token", 
              "value": "for"
            }, 
            " ", 
            {
              "contents": [
                "(", 
                {
                  "ctx": "Store", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "i"
                }, 
                {
                  "id": "tid_20", 
                  "type": "token", 
                  "value": ","
                }, 
                " ", 
                {
                  "ctx": "Store", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "elt"
                }, 
                ")"
              ], 
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Tuple"
            }, 
            " ", 
            {
              "id": "tid_21", 
              "type": "token", 
              "value": "in"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "enumerate"
                }, 
                "(", 
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "lst"
                }, 
                ")"
              ], 
              "id": "id_0", 
              "type": "Call"
            }
          ], 
          "id": "id_0", 
          "type": "For"
        }, 
        {
          "id": "tid_22", 
          "type": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_23", 
              "type": "token", 
              "value": "print"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "i"
            }, 
            {
              "id": "tid_24", 
              "type": "token", 
              "value": ","
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "elt"
            }
          ], 
          "id": "id_0", 
          "type": "Print"
        }, 
        "\n\n", 
        {
          "id": "tid_25", 
          "type": "comment", 
          "value": "# multiline test"
        }, 
        "\n", 
        {
          "contents": [
            {
              "id": "tid_26", 
              "type": "token", 
              "value": "for"
            }, 
            " ", 
            {
              "contents": [
                "(", 
                {
                  "ctx": "Store", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "i"
                }, 
                {
                  "id": "tid_27", 
                  "type": "token", 
                  "value": ","
                }, 
                " ", 
                {
                  "ctx": "Store", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "elt"
                }, 
                ")"
              ], 
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Tuple"
            }, 
            " ", 
            {
              "id": "tid_28", 
              "type": "token", 
              "value": "\\"
            }, 
            "\n       in \\\n           ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "enumerate"
                }, 
                "(", 
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "lst"
                }, 
                ")"
              ], 
              "id": "id_0", 
              "type": "Call"
            }
          ], 
          "id": "id_0", 
          "type": "For"
        }, 
        {
          "id": "tid_29", 
          "type": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_30", 
              "type": "token", 
              "value": "print"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "i"
            }, 
            {
              "id": "tid_31", 
              "type": "token", 
              "value": ","
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "elt"
            }
          ], 
          "id": "id_0", 
          "type": "Print"
        }, 
        "\n\n", 
        {
          "contents": [
            {
              "id": "tid_32", 
              "type": "token", 
              "value": "for"
            }, 
            " ", 
            {
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Name", 
              "value": "x"
            }, 
            " ", 
            {
              "id": "tid_33", 
              "type": "token", 
              "value": "in"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "range"
                }, 
                "(", 
                {
                  "id": "id_0", 
                  "type": "Num", 
                  "value": "100"
                }, 
                ")"
              ], 
              "id": "id_0", 
              "type": "Call"
            }
          ], 
          "id": "id_0", 
          "type": "For"
        }, 
        {
          "id": "tid_34", 
          "type": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_35", 
              "type": "token", 
              "value": "if"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "x"
                }, 
                " ", 
                {
                  "id": "tid_36", 
                  "type": "token", 
                  "value": "<"
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "type": "Num", 
                  "value": "2"
                }
              ], 
              "id": "id_0", 
              "ops": [
                "Lt"
              ], 
              "type": "Compare"
            }
          ], 
          "id": "id_0", 
          "type": "If"
        }, 
        {
          "id": "tid_37", 
          "type": "token", 
          "value": ":"
        }, 
        "\n        ", 
        {
          "contents": [
            {
              "id": "tid_38", 
              "type": "token", 
              "value": "break"
            }
          ], 
          "id": "id_0", 
          "type": "Break"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_39", 
              "type": "token", 
              "value": "elif"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "x"
                }, 
                " ", 
                {
                  "id": "tid_40", 
                  "type": "token", 
                  "value": ">"
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "type": "Num", 
                  "value": "10"
                }
              ], 
              "id": "id_0", 
              "ops": [
                "Gt"
              ], 
              "type": "Compare"
            }
          ], 
          "id": "id_0", 
          "type": "If"
        }, 
        {
          "id": "tid_41", 
          "type": "token", 
          "value": ":"
        }, 
        "\n        ", 
        {
          "contents": [
            {
              "id": "tid_42", 
              "type": "token", 
              "value": "continue"
            }
          ], 
          "id": "id_0", 
          "type": "Continue"
        }, 
        "\n    else:\n        ", 
        {
          "contents": [
            {
              "id": "tid_43", 
              "type": "token", 
              "value": "print"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "x"
            }
          ], 
          "id": "id_0", 
          "type": "Print"
        }, 
        "\n\n", 
        {
          "contents": [
            {
              "id": "tid_44", 
              "type": "token", 
              "value": "for"
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Store", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "k"
                }, 
                {
                  "id": "tid_45", 
                  "type": "token", 
                  "value": ","
                }, 
                " ", 
                {
                  "ctx": "Store", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "v"
                }
              ], 
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Tuple"
            }, 
            " ", 
            {
              "id": "tid_46", 
              "type": "token", 
              "value": "in"
            }, 
            " ", 
            {
              "contents": [
                {
                  "attr": "iteritems", 
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "type": "Name", 
                      "value": "d"
                    }, 
                    ".iteritems"
                  ], 
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Attribute"
                }, 
                "()"
              ], 
              "id": "id_0", 
              "type": "Call"
            }
          ], 
          "id": "id_0", 
          "type": "For"
        }, 
        {
          "id": "tid_47", 
          "type": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_48", 
              "type": "token", 
              "value": "print"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "k"
            }, 
            {
              "id": "tid_49", 
              "type": "token", 
              "value": ","
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "v"
            }
          ], 
          "id": "id_0", 
          "type": "Print"
        }, 
        "\n\n", 
        {
          "contents": [
            {
              "id": "tid_50", 
              "type": "token", 
              "value": "for"
            }, 
            " ", 
            {
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Name", 
              "value": "ty"
            }, 
            " ", 
            {
              "id": "tid_51", 
              "type": "token", 
              "value": "in"
            }, 
            " ", 
            {
              "contents": [
                {
                  "attr": "mro", 
                  "contents": [
                    {
                      "contents": [
                        {
                          "ctx": "Load", 
                          "id": "id_0", 
                          "type": "Name", 
                          "value": "type"
                        }, 
                        "(", 
                        {
                          "ctx": "Load", 
                          "id": "id_0", 
                          "type": "Name", 
                          "value": "obj"
                        }, 
                        ")"
                      ], 
                      "id": "id_0", 
                      "type": "Call"
                    }, 
                    ".mro"
                  ], 
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Attribute"
                }, 
                "()"
              ], 
              "id": "id_0", 
              "type": "Call"
            }
          ], 
          "id": "id_0", 
          "type": "For"
        }, 
        {
          "id": "tid_52", 
          "type": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_53", 
              "type": "token", 
              "value": "print"
            }, 
            " ", 
            {
              "id": "id_0", 
              "type": "Str", 
              "value": "'foo'"
            }
          ], 
          "id": "id_0", 
          "type": "Print"
        }
      ], 
      "id": "id_0", 
      "type": "Module"
    }, 
    "\n"
  ], 
  "id": "id_ROOT", 
  "type": "ROOT_NODE"
}
