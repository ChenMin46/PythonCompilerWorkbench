raise
raise a
raise a  ,  b
raise a  ,b,  c

try:
    x = d[name]
except KeyError:
    print 'not found'
    raise NotImplementedError

try:
    x = 5
except:
    x = 10
===
Module
  body: [
    Raise >> 'raise'
      type: None
      inst: None
      tback: None
    Raise >> 'raise a'
      type: Name >> 'a'
        id: 'a'
        ctx: Load
      inst: None
      tback: None
    Raise >> 'raise a  ,  b'
      type: Name >> 'a'
        id: 'a'
        ctx: Load
      inst: Name >> 'b'
        id: 'b'
        ctx: Load
      tback: None
    Raise >> 'raise a  ,b,  c'
      type: Name >> 'a'
        id: 'a'
        ctx: Load
      inst: Name >> 'b'
        id: 'b'
        ctx: Load
      tback: Name >> 'c'
        id: 'c'
        ctx: Load
    TryExcept >> 'try'
      body: [
        Assign >> 'x = d[name]'
          targets: [
            Name >> 'x'
              id: 'x'
              ctx: Store
          ]
          value: Subscript >> 'd[name]'
            value: Name >> 'd'
              id: 'd'
              ctx: Load
            slice: Index >> 'name'
              value: Name >> 'name'
                id: 'name'
                ctx: Load
            ctx: Load
      ]
      handlers: [
        ExceptHandler >> 'except KeyError'
          type: Name >> 'KeyError'
            id: 'KeyError'
            ctx: Load
          name: None
          body: [
            Print >> "print 'not found'"
              dest: None
              values: [
                Str >> "'not found'"
                  s: 'not found'
              ]
              nl: True
            Raise >> 'raise NotImplementedError'
              type: Name >> 'NotImplementedError'
                id: 'NotImplementedError'
                ctx: Load
              inst: None
              tback: None
          ]
      ]
      orelse: [
      ]
    TryExcept >> 'try'
      body: [
        Assign >> 'x = 5'
          targets: [
            Name >> 'x'
              id: 'x'
              ctx: Store
          ]
          value: Num >> '5'
            n: 5
      ]
      handlers: [
        ExceptHandler >> 'except'
          type: None
          name: None
          body: [
            Assign >> 'x = 10'
              targets: [
                Name >> 'x'
                  id: 'x'
                  ctx: Store
              ]
              value: Num >> '10'
                n: 10
          ]
      ]
      orelse: [
      ]
  ]
--- JSON ---
{
  "contents": [
    {
      "contents": [
        {
          "contents": [
            "raise"
          ], 
          "id": "id_0", 
          "name": "Raise"
        }, 
        "\n", 
        {
          "contents": [
            "raise ", 
            {
              "contents": [
                "a"
              ], 
              "id": "id_0", 
              "name": "Name"
            }
          ], 
          "id": "id_0", 
          "name": "Raise"
        }, 
        "\n", 
        {
          "contents": [
            "raise ", 
            {
              "contents": [
                "a"
              ], 
              "id": "id_0", 
              "name": "Name"
            }, 
            "  ,  ", 
            {
              "contents": [
                "b"
              ], 
              "id": "id_0", 
              "name": "Name"
            }
          ], 
          "id": "id_0", 
          "name": "Raise"
        }, 
        "\n", 
        {
          "contents": [
            "raise ", 
            {
              "contents": [
                "a"
              ], 
              "id": "id_0", 
              "name": "Name"
            }, 
            "  ,", 
            {
              "contents": [
                "b"
              ], 
              "id": "id_0", 
              "name": "Name"
            }, 
            ",  ", 
            {
              "contents": [
                "c"
              ], 
              "id": "id_0", 
              "name": "Name"
            }
          ], 
          "id": "id_0", 
          "name": "Raise"
        }, 
        "\n\n", 
        {
          "contents": [
            "try"
          ], 
          "id": "id_0", 
          "name": "TryExcept"
        }, 
        ":", 
        "\n", 
        "    ", 
        {
          "contents": [
            {
              "contents": [
                "x"
              ], 
              "id": "id_0", 
              "name": "Name"
            }, 
            " = ", 
            {
              "contents": [
                {
                  "contents": [
                    "d"
                  ], 
                  "id": "id_0", 
                  "name": "Name"
                }, 
                "[", 
                {
                  "contents": [
                    {
                      "contents": [
                        "name"
                      ], 
                      "id": "id_0", 
                      "name": "Name"
                    }
                  ], 
                  "id": "id_0", 
                  "name": "Index"
                }, 
                "]"
              ], 
              "id": "id_0", 
              "name": "Subscript"
            }
          ], 
          "id": "id_0", 
          "name": "Assign"
        }, 
        "\n", 
        {
          "contents": [
            "except ", 
            {
              "contents": [
                "KeyError"
              ], 
              "id": "id_0", 
              "name": "Name"
            }, 
            ""
          ], 
          "id": "id_0", 
          "name": "ExceptHandler"
        }, 
        ":", 
        "\n", 
        "    ", 
        {
          "contents": [
            "print ", 
            {
              "contents": [
                "'not found'"
              ], 
              "id": "id_0", 
              "name": "Str"
            }
          ], 
          "id": "id_0", 
          "name": "Print"
        }, 
        "\n    ", 
        {
          "contents": [
            "raise ", 
            {
              "contents": [
                "NotImplementedError"
              ], 
              "id": "id_0", 
              "name": "Name"
            }
          ], 
          "id": "id_0", 
          "name": "Raise"
        }, 
        "\n\n", 
        {
          "contents": [
            "try"
          ], 
          "id": "id_0", 
          "name": "TryExcept"
        }, 
        ":", 
        "\n", 
        "    ", 
        {
          "contents": [
            {
              "contents": [
                "x"
              ], 
              "id": "id_0", 
              "name": "Name"
            }, 
            " = ", 
            {
              "contents": [
                "5"
              ], 
              "id": "id_0", 
              "name": "Num"
            }
          ], 
          "id": "id_0", 
          "name": "Assign"
        }, 
        "\n", 
        {
          "contents": [
            "except"
          ], 
          "id": "id_0", 
          "name": "ExceptHandler"
        }, 
        ":", 
        "\n", 
        "    ", 
        {
          "contents": [
            {
              "contents": [
                "x"
              ], 
              "id": "id_0", 
              "name": "Name"
            }, 
            " = ", 
            {
              "contents": [
                "10"
              ], 
              "id": "id_0", 
              "name": "Num"
            }
          ], 
          "id": "id_0", 
          "name": "Assign"
        }
      ], 
      "id": "id_0", 
      "name": "Module"
    }, 
    "\n"
  ], 
  "id": "id_ROOT", 
  "name": "ROOT_NODE"
}
