raise
raise a
raise a  ,  b
raise a  ,b,  c

try:
    x = d[name]
except KeyError:
    print 'not found'
    raise NotImplementedError

try:
    x = 5
except:
    x = 10
===
Module
  body: [
    Raise >> 'raise'
      type: None
      inst: None
      tback: None
    Raise >> 'raise a'
      type: Name >> 'a'
        id: 'a'
        ctx: Load
      inst: None
      tback: None
    Raise >> 'raise a  ,  b'
      type: Name >> 'a'
        id: 'a'
        ctx: Load
      inst: Name >> 'b'
        id: 'b'
        ctx: Load
      tback: None
    Raise >> 'raise a  ,b,  c'
      type: Name >> 'a'
        id: 'a'
        ctx: Load
      inst: Name >> 'b'
        id: 'b'
        ctx: Load
      tback: Name >> 'c'
        id: 'c'
        ctx: Load
    TryExcept >> 'try'
      body: [
        Assign >> 'x = d[name]'
          targets: [
            Name >> 'x'
              id: 'x'
              ctx: Store
          ]
          value: Subscript >> 'd[name]'
            value: Name >> 'd'
              id: 'd'
              ctx: Load
            slice: Index >> 'name'
              value: Name >> 'name'
                id: 'name'
                ctx: Load
            ctx: Load
      ]
      handlers: [
        ExceptHandler >> 'except KeyError'
          type: Name >> 'KeyError'
            id: 'KeyError'
            ctx: Load
          name: None
          body: [
            Print >> "print 'not found'"
              dest: None
              values: [
                Str >> "'not found'"
                  s: 'not found'
              ]
              nl: True
            Raise >> 'raise NotImplementedError'
              type: Name >> 'NotImplementedError'
                id: 'NotImplementedError'
                ctx: Load
              inst: None
              tback: None
          ]
      ]
      orelse: [
      ]
    TryExcept >> 'try'
      body: [
        Assign >> 'x = 5'
          targets: [
            Name >> 'x'
              id: 'x'
              ctx: Store
          ]
          value: Num >> '5'
            n: 5
      ]
      handlers: [
        ExceptHandler >> 'except'
          type: None
          name: None
          body: [
            Assign >> 'x = 10'
              targets: [
                Name >> 'x'
                  id: 'x'
                  ctx: Store
              ]
              value: Num >> '10'
                n: 10
          ]
      ]
      orelse: [
      ]
  ]
--- JSON ---
{
  "contents": [
    {
      "contents": [
        {
          "contents": [
            {
              "id": "tid_1", 
              "type": "token", 
              "value": "raise"
            }
          ], 
          "id": "id_0", 
          "type": "Raise"
        }, 
        "\n", 
        {
          "contents": [
            {
              "id": "tid_2", 
              "type": "token", 
              "value": "raise"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "a"
            }
          ], 
          "id": "id_0", 
          "type": "Raise"
        }, 
        "\n", 
        {
          "contents": [
            {
              "id": "tid_3", 
              "type": "token", 
              "value": "raise"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "a"
            }, 
            "  ", 
            {
              "id": "tid_4", 
              "type": "token", 
              "value": ","
            }, 
            "  ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "b"
            }
          ], 
          "id": "id_0", 
          "type": "Raise"
        }, 
        "\n", 
        {
          "contents": [
            {
              "id": "tid_5", 
              "type": "token", 
              "value": "raise"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "a"
            }, 
            "  ", 
            {
              "id": "tid_6", 
              "type": "token", 
              "value": ","
            }, 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "b"
            }, 
            {
              "id": "tid_7", 
              "type": "token", 
              "value": ","
            }, 
            "  ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "c"
            }
          ], 
          "id": "id_0", 
          "type": "Raise"
        }, 
        "\n\n", 
        {
          "contents": [
            {
              "id": "tid_8", 
              "type": "token", 
              "value": "try"
            }
          ], 
          "id": "id_0", 
          "type": "TryExcept"
        }, 
        {
          "id": "tid_9", 
          "type": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Name", 
              "value": "x"
            }, 
            " ", 
            {
              "id": "tid_10", 
              "type": "token", 
              "value": "="
            }, 
            " ", 
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "type": "Name", 
                  "value": "d"
                }, 
                "[", 
                {
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "type": "Name", 
                      "value": "name"
                    }
                  ], 
                  "id": "id_0", 
                  "type": "Index"
                }, 
                "]"
              ], 
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Subscript"
            }
          ], 
          "id": "id_0", 
          "type": "Assign"
        }, 
        "\n", 
        {
          "contents": [
            {
              "id": "tid_11", 
              "type": "token", 
              "value": "except"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "KeyError"
            }
          ], 
          "id": "id_0", 
          "name": null, 
          "type": "ExceptHandler"
        }, 
        {
          "id": "tid_12", 
          "type": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_13", 
              "type": "token", 
              "value": "print"
            }, 
            " ", 
            {
              "id": "id_0", 
              "type": "Str", 
              "value": "'not found'"
            }
          ], 
          "id": "id_0", 
          "type": "Print"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "id": "tid_14", 
              "type": "token", 
              "value": "raise"
            }, 
            " ", 
            {
              "ctx": "Load", 
              "id": "id_0", 
              "type": "Name", 
              "value": "NotImplementedError"
            }
          ], 
          "id": "id_0", 
          "type": "Raise"
        }, 
        "\n\n", 
        {
          "contents": [
            {
              "id": "tid_15", 
              "type": "token", 
              "value": "try"
            }
          ], 
          "id": "id_0", 
          "type": "TryExcept"
        }, 
        {
          "id": "tid_16", 
          "type": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Name", 
              "value": "x"
            }, 
            " ", 
            {
              "id": "tid_17", 
              "type": "token", 
              "value": "="
            }, 
            " ", 
            {
              "id": "id_0", 
              "type": "Num", 
              "value": "5"
            }
          ], 
          "id": "id_0", 
          "type": "Assign"
        }, 
        "\n", 
        {
          "contents": [
            {
              "id": "tid_18", 
              "type": "token", 
              "value": "except"
            }
          ], 
          "id": "id_0", 
          "name": null, 
          "type": "ExceptHandler"
        }, 
        {
          "id": "tid_19", 
          "type": "token", 
          "value": ":"
        }, 
        "\n    ", 
        {
          "contents": [
            {
              "ctx": "Store", 
              "id": "id_0", 
              "type": "Name", 
              "value": "x"
            }, 
            " ", 
            {
              "id": "tid_20", 
              "type": "token", 
              "value": "="
            }, 
            " ", 
            {
              "id": "id_0", 
              "type": "Num", 
              "value": "10"
            }
          ], 
          "id": "id_0", 
          "type": "Assign"
        }
      ], 
      "id": "id_0", 
      "type": "Module"
    }, 
    "\n"
  ], 
  "id": "id_ROOT", 
  "type": "ROOT_NODE"
}
