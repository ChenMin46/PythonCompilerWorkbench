(x + 5) * (y + z)
not (x or y)
(one * (two + 3))
x = (tokens[5] == 'male')
y = (tokens[5] == ' ) ')
===
Module
  body: [
    Expr
      value: BinOp >> '(x + 5) * (y + z'
        left: BinOp >> 'x + 5'
          left: Name >> 'x'
            id: 'x'
            ctx: Load
          op: Add
          right: Num >> '5'
            n: 5
        op: Mult
        right: BinOp >> 'y + z'
          left: Name >> 'y'
            id: 'y'
            ctx: Load
          op: Add
          right: Name >> 'z'
            id: 'z'
            ctx: Load
    Expr
      value: UnaryOp >> 'not (x or y'
        op: Not
        operand: BoolOp >> 'x or y'
          op: Or
          values: [
            Name >> 'x'
              id: 'x'
              ctx: Load
            Name >> 'y'
              id: 'y'
              ctx: Load
          ]
    Expr
      value: BinOp >> 'one * (two + 3'
        left: Name >> 'one'
          id: 'one'
          ctx: Load
        op: Mult
        right: BinOp >> 'two + 3'
          left: Name >> 'two'
            id: 'two'
            ctx: Load
          op: Add
          right: Num >> '3'
            n: 3
    Assign >> "x = (tokens[5] == 'male'"
      targets: [
        Name >> 'x'
          id: 'x'
          ctx: Store
      ]
      value: Compare >> "tokens[5] == 'male'"
        left: Subscript >> 'tokens[5]'
          value: Name >> 'tokens'
            id: 'tokens'
            ctx: Load
          slice: Index >> '5'
            value: Num >> '5'
              n: 5
          ctx: Load
        ops: [
          Eq
        ]
        comparators: [
          Str >> "'male'"
            s: 'male'
        ]
    Assign >> "y = (tokens[5] == ' ) '"
      targets: [
        Name >> 'y'
          id: 'y'
          ctx: Store
      ]
      value: Compare >> "tokens[5] == ' ) '"
        left: Subscript >> 'tokens[5]'
          value: Name >> 'tokens'
            id: 'tokens'
            ctx: Load
          slice: Index >> '5'
            value: Num >> '5'
              n: 5
          ctx: Load
        ops: [
          Eq
        ]
        comparators: [
          Str >> "' ) '"
            s: ' ) '
        ]
  ]
--- JSON ---
{
  "contents": [
    {
      "contents": [
        {
          "contents": [
            {
              "contents": [
                "(", 
                {
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "x"
                    }, 
                    " ", 
                    {
                      "id": "tid_1", 
                      "name": "token", 
                      "value": "+"
                    }, 
                    " ", 
                    {
                      "id": "id_0", 
                      "name": "Num", 
                      "value": "5"
                    }
                  ], 
                  "id": "id_0", 
                  "name": "BinOp", 
                  "op": "Add"
                }, 
                ") * (", 
                {
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "y"
                    }, 
                    " ", 
                    {
                      "id": "tid_2", 
                      "name": "token", 
                      "value": "+"
                    }, 
                    " ", 
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "z"
                    }
                  ], 
                  "id": "id_0", 
                  "name": "BinOp", 
                  "op": "Add"
                }
              ], 
              "id": "id_0", 
              "name": "BinOp", 
              "op": "Mult"
            }
          ], 
          "id": "id_0", 
          "name": "Expr"
        }, 
        ")\n", 
        {
          "contents": [
            {
              "contents": [
                "not (", 
                {
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "x"
                    }, 
                    " ", 
                    {
                      "id": "tid_3", 
                      "name": "token", 
                      "value": "or"
                    }, 
                    " ", 
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "y"
                    }
                  ], 
                  "id": "id_0", 
                  "name": "BoolOp", 
                  "op": "Or"
                }
              ], 
              "id": "id_0", 
              "name": "UnaryOp", 
              "op": "Not"
            }
          ], 
          "id": "id_0", 
          "name": "Expr"
        }, 
        ")\n(", 
        {
          "contents": [
            {
              "contents": [
                {
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Name", 
                  "value": "one"
                }, 
                " * (", 
                {
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "two"
                    }, 
                    " ", 
                    {
                      "id": "tid_4", 
                      "name": "token", 
                      "value": "+"
                    }, 
                    " ", 
                    {
                      "id": "id_0", 
                      "name": "Num", 
                      "value": "3"
                    }
                  ], 
                  "id": "id_0", 
                  "name": "BinOp", 
                  "op": "Add"
                }
              ], 
              "id": "id_0", 
              "name": "BinOp", 
              "op": "Mult"
            }
          ], 
          "id": "id_0", 
          "name": "Expr"
        }, 
        "))\n", 
        {
          "contents": [
            {
              "ctx": "Store", 
              "id": "id_0", 
              "name": "Name", 
              "value": "x"
            }, 
            " = (", 
            {
              "contents": [
                {
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "tokens"
                    }, 
                    "[", 
                    {
                      "contents": [
                        {
                          "id": "id_0", 
                          "name": "Num", 
                          "value": "5"
                        }
                      ], 
                      "id": "id_0", 
                      "name": "Index"
                    }, 
                    "]"
                  ], 
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Subscript"
                }, 
                " ", 
                {
                  "id": "tid_5", 
                  "name": "token", 
                  "value": "=="
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "name": "Str", 
                  "value": "'male'"
                }
              ], 
              "id": "id_0", 
              "name": "Compare", 
              "ops": [
                "Eq"
              ]
            }
          ], 
          "id": "id_0", 
          "name": "Assign"
        }, 
        ")\n", 
        {
          "contents": [
            {
              "ctx": "Store", 
              "id": "id_0", 
              "name": "Name", 
              "value": "y"
            }, 
            " = (", 
            {
              "contents": [
                {
                  "contents": [
                    {
                      "ctx": "Load", 
                      "id": "id_0", 
                      "name": "Name", 
                      "value": "tokens"
                    }, 
                    "[", 
                    {
                      "contents": [
                        {
                          "id": "id_0", 
                          "name": "Num", 
                          "value": "5"
                        }
                      ], 
                      "id": "id_0", 
                      "name": "Index"
                    }, 
                    "]"
                  ], 
                  "ctx": "Load", 
                  "id": "id_0", 
                  "name": "Subscript"
                }, 
                " ", 
                {
                  "id": "tid_6", 
                  "name": "token", 
                  "value": "=="
                }, 
                " ", 
                {
                  "id": "id_0", 
                  "name": "Str", 
                  "value": "' ) '"
                }
              ], 
              "id": "id_0", 
              "name": "Compare", 
              "ops": [
                "Eq"
              ]
            }
          ], 
          "id": "id_0", 
          "name": "Assign"
        }
      ], 
      "id": "id_0", 
      "name": "Module"
    }, 
    ")\n"
  ], 
  "id": "id_ROOT", 
  "name": "ROOT_NODE"
}
