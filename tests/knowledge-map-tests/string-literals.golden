"hello"
'hello'
"This is a sentence."
"John's cat."
'He liked watching "The Matrix"!'
""
" "
"\t \\ \" \'"
"John's\n\n\n\ndog."

",".join([1,2,3])
===
Module
  body: [
    Expr
      value: Str >> '"hello"'
        s: 'hello'
    Expr
      value: Str >> "'hello'"
        s: 'hello'
    Expr
      value: Str >> '"This is a sentence."'
        s: 'This is a sentence.'
    Expr
      value: Str >> '"John\'s cat."'
        s: "John's cat."
    Expr
      value: Str >> '\'He liked watching "The Matrix"!\''
        s: 'He liked watching "The Matrix"!'
    Expr
      value: Str >> '""'
        s: ''
    Expr
      value: Str >> '" "'
        s: ' '
    Expr
      value: Str >> '"\\t \\\\ \\" \\\''
        s: '\t \\ " \''
    Expr
      value: Str >> '"John\'s\\n\\n\\n\\ndog."'
        s: "John's\n\n\n\ndog."
    Expr
      value: Call >> '",".join([1,2,3])'
        func: Attribute >> '",".join'
          value: Str >> '","'
            s: ','
          attr: 'join'
          ctx: Load
        args: [
          List >> '[1,2,3]'
            elts: [
              Num >> '1'
                n: 1
              Num >> '2'
                n: 2
              Num >> '3'
                n: 3
            ]
            ctx: Load
        ]
        keywords: [
        ]
        starargs: None
        kwargs: None
  ]
